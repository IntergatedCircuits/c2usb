target_include_directories(${PROJECT_NAME}
    PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}
)

target_sources(${PROJECT_NAME}
    PUBLIC
        hid/application.hpp
        i2c/hid/device.hpp
        i2c/hid/standard.hpp
        i2c/base.hpp
        i2c/slave.hpp
        usb/class/hid.hpp
        usb/df/class/cdc.hpp
        usb/df/class/cdc_acm.hpp
        usb/df/class/hid.hpp
        usb/df/vendor/microsoft_os_extension.hpp
        usb/df/vendor/microsoft_xinput.hpp
        usb/df/config.hpp
        usb/df/device.hpp
        usb/df/ep_flags.hpp
        usb/df/function.hpp
        usb/df/mac.hpp
        usb/df/message.hpp
        usb/df/transfer.hpp
        usb/standard/descriptors.hpp
        usb/standard/requests.hpp
        usb/vendor/microsoft_os.hpp
        usb/vendor/microsoft_xusb.hpp
        usb/base.hpp
        usb/control.hpp
        usb/endpoint.hpp
        usb/product_info.hpp
        usb/speeds.hpp
        usb/version.hpp
        c2usb.hpp
        reference_array_view.hpp
        single_elem_queue.hpp
        uninit_store.hpp
    PRIVATE
        i2c/hid/device.cpp
        usb/df/class/cdc.cpp
        usb/df/class/cdc_acm.cpp
        usb/df/class/hid.cpp
        usb/df/vendor/microsoft_os_extension.cpp
        usb/df/vendor/microsoft_xinput.cpp
        usb/df/config.cpp
        usb/df/device.cpp
        usb/df/function.cpp
        usb/df/mac.cpp
        usb/df/message.cpp
        usb/standard/descriptors.cpp
)

# ports
if (DEFINED ENV{ZEPHYR_BASE})
    add_subdirectory_ifdef(CONFIG_C2USB_UDC_MAC
        port/zephyr)
    add_subdirectory_ifdef(CONFIG_C2USB_BLUETOOTH
        port/zephyr/bluetooth)

    target_link_libraries(${PROJECT_NAME}
        PUBLIC
            zephyr_interface
    )
else()
    add_subdirectory(port/nxp)
endif()
